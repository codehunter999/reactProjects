let koa,Router,bodyParser,mongoose,api;_fe5‍.w("koa",[["default",["koa"],function(v){koa=v}]]);_fe5‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_fe5‍.w("koa-bodyparser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_fe5‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_fe5‍.w("./api",[["default",["api"],function(v){api=v}]]);require('dotenv').config();







//비구조화 할당을 통해 process.env 내부값에 대한 래퍼런스 만들기
const { PORT, MONGO_URI } = process.env;

mongoose
.connect(MONGO_URI, { useNewUrlParser: true, useFindAndModify: false })
.then(() => {
    console.log('Connected to mongoDB');
})
.catch(e => {
    _fe5‍.g.console.error(e);
});

const app = new koa();
const router = new Router();

//라우터 설정
router.use('/api', api.routes()); //api 라우트 적용

//라우터 적용 전에 bodyparser 적용
app.use(bodyParser());

//app 인스턴스에 라우터 적용
app.use(router.routes()).use(router.allowedMethods());

//PORT가 지정되어 있지 않다면 4000을 사용
const port = PORT || 4000;
app.listen(port, () => {
    _fe5‍.g.console.log('Listening to port %d', port);
})